{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Create new or use an existing Log Analytic Workspace"
            }
        },
        "logAnalyticsRegion": { 
            "type": "string",
            "allowedValues": [
                "westeurope",
                "eastus",
                "southeastasia",
                "australiasoutheast",
                "wescentralus"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your new or existing OMS workspace"
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Use an existing Automation account or create a new"
            }
        },
        "automationRegion": {
            "type": "string",
            "allowedValues": [
                "westeurope",
                "southeastasia",
                "eastus2",
                "southcentralus",
                "japaneast",
                "southeastasia",
                "southcentralus",
                "northeurope",
                "canadacentral",
                "australiasoutheast",
                "centralindia",
                "japaneast"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your OMS Automation Account"
            }
        },
      "sapHanaMonitorUser": {
            "type": "string",
            "metadata": {
                "description": "Specify the username  for Hana Monitoring Role"
            }
        },
        "sapHanaMonitorPassword": {
            "type": "securestring",
             "metadata": {
                "description": "Specify the password  for Hana Monitoring Role"
            }
        },
        "collectQueryPerformance": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your OMS Automation Account"
            }
        },
        "collectHanaTableInventory": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Specify the Azure Region for your OMS Automation Account"
            }
        },
        "notifyEmail":{
            "type": "string",
            "metadata": {
                "description": "Specify the email for SAP Hana Alert Notification Action Group"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Volkanco/AzureDeploy/master/OMSSolutions/oms-sap-hana-monitoring-solution",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            }
        }
    },
    "variables": {
        "runbooks": {
            "ingestMainRunbook": {
                "name": "AzureSAPHanaCollector-MS",
                "version": "1.0.0.1",
                "description": "Runbook to collect SAP Hana information and metrics into Log Analytics",
                "type": "PowerShell",
                "Id": ""
            },
            "ingestConfigRunbook": {
                "name": "AzureSAPHanaConfigChecks-MS",
                "version": "1.0.0.1",
                "description": "Runbook to collect SAP Hana config checks and large tables inventory",
                "type": "PowerShell",
                "Id": ""
            },
            "ingestSchedulerRunbook": {
                "name": "AzureSAPHanaInitialization-MS",
                "version": "1.0.0.1",
                "description": "Runbook to automatically create required schedules and variables for SAP Hana data collection",
                "type": "PowerShell",
                "Id": ""
            }
        },
        "mainRunbookUri": "[concat(parameters('_artifactsLocation'),'/scripts/AzureSAPHanaCollector-MS.ps1', parameters('_artifactsLocationSasToken'))]",
        "configRunbookUri": "[concat(parameters('_artifactsLocation'),'/scripts/AzureSAPHanaConfigChecks-MS.ps1', parameters('_artifactsLocationSasToken'))]",
        "schedulerRunbookUri": "[concat(parameters('_artifactsLocation'),'/scripts/AzureSAPHanaInitialization-MS.ps1', parameters('_artifactsLocationSasToken'))]",
        "omsSolutions": {
            "customSolution": {
                "name": "Azure SAP HANA Infrastructure",
                "solutionName": "[concat('AzureSAPHanaMonitoring', '[', parameters('logAnalyticsWorkspaceName'), ']')]",
                "publisher": "volkanc@microsoft.com",
                "displayName": "Azure SAP HANA Infrastructure",
                "description": "Monitor Azure VMs and Sclae Sets  deployed across subscriptions",
                "author": "volkanc@microsoft.com"
            }
        },
        "solutionName" : "AzureAutomation",
        "dataCollectionFrequency": "15",
        "ingestSchedulerGuid": "[guid(uniqueString(deployment().name))]",
        "opsInsightWorkspaceID": "AzureHANAMonitor_WS_ID",
        "opsInsightWorkspaceIDType": "string",
        "opsInsightWorkspaceIDDescription": "Value of the user's omsWorkspaceId",
        "opsInsightWorkspaceKey": "AzureHANAMonitor_WS_KEY",
        "opsInsightWorkspaceKeyType": "string",
        "opsInsightJobTracker": "AzureHANAMonitor_Tracker",
        "opsInsightJobTrackerType": "integer",        
        "opsInsightWorkspaceKeyDescription": "Encrypted value of the user's omsWorkspaceKey",
        "createScheduleAutomationAccountName": "AzureSAPHanaMonitoring-AzureAutomationAccount-MS-Mgmt",
        "createScheduleAutomationAccountType": "string",
        "createScheduleAutomationAccountDescription": "The name of the Automation Account",
        "createScheduleResourceGroupName": "AzureSAPHanaMonitoring-AzureAutomationResourceGroup-MS-Mgmt",
        "createScheduleResourceGroupType": "string",
        "createScheduleResourceGroupDescription": "The name of the resource group",
        "omsAutomationSku": "basic",
        "ingestInterval": "1",
        "ingestFrequency": "hour",
        "ingestScheduleName": "AzureSAPHanaMonitoring-Scheduler-Hourly",
        "sapHanaConfigfolder": "c:\\HanaMonitor",
        "hybridWorkerGroup": "HANAMonitorGroup1",
        "hanaMonitorDefaultUser":"AzureHanaMonitorUser",
        "hanaMonitorDefaultPassword":"AzureHanaMonitorPassword",
        "actionGroupShortName" : "HanaMail",
        "actionGroupName":"HanaEmailNotification",
        "alertArray": [
            {
                "searchName": "SAP Hana Failed Config Checks Detected",
                "description": "SAP Hana Failed Config Checks Detected. Azure SAp Hana Monitoring  perform Hana configuration checks every hour. ",
                "severity": "warning",
                "query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s) |where RESULT_s==\"Fail\"",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 240,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "SAP Hana Failed Config Checks Detected",
                "enabled" : false
            },
            {
                "searchName": "Hana Data Collector Job Not Running",
                "description": "Hana Data Collector Job Not Running. Make sure hybrid runbook VM configured up and running and its communicating to Azure Automation",
                "severity": "critical",
                "query": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d)  | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s  | project Host=HOST_s,MinSinceLastData=datetime_diff('Minute',now(),LastCall) | where MinSinceLastData > 30 ",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 15,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "Hana Data Collector Job Not Running",
                "enabled": false
            },
            {
                "searchName": "Hana Data Collector Failed to Connect Hana DB",
                "description": "Hana Data Collector Job Not Running. Make sure hybrid runbook VM configured up and running and its communicating to Azure Automation",
                "severity": "critical",
                "query": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\"  |where TimeGenerated > ago(1d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=strcat(Database_s,\"|\",HOST_s),LastStatus=strcat(Connection_s,\":\",ErrorMessage_s),MinSinceLastData=datetime_diff('Minute',now(),LastCall) | where LastStatus !contains \"Successful\"",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "Hana Data Collector Failed to Connect Hana DB",
                "enabled": false
            }            ,
            {
                "searchName": "High CPU Utilization on Hana Host",
                "description": "High CPU Utilization on Hana Host.  Host utilization was > 80%",
                "severity": "critical",
                "query": "let CPUThreshold=80; SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" | summarize CPU=avg(PerfValue_d) by Host=HOST_s, bin (TimeGenerated, 5m) |where CPU > CPUThreshold",   
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "High CPU Utilization on Hana Host",
                "enabled": false
            },
            {
                "searchName": "High Memory Utilization on Hana Host",
                "description": "High Memory Utilization on Hana Host, Memory used % > 90",
                "severity": "critical",
                "query": "let MemoryThreshold=90; SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"FREE_PHYSICAL_MEMORY\" |summarize FREE=avg(PerfValue_d) by HOST_s,PerfCounter_s, bin(TimeGenerated, 15m) | join kind= inner (     SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"USED_PHYSICAL_MEMORY\" |summarize USED=avg(PerfValue_d) by HOST_s,PerfCounter_s, bin(TimeGenerated, 15m) ) on HOST_s |project Host=HOST_s, USEDPCT=(USED/(FREE+USED))*100,TimeGenerated |where USEDPCT > MemoryThreshold",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "High Memory Utilization on Hana Host",
                "enabled": false
            },
            {
                "searchName": "Hana Disk Free Space Alert",
                "description": "Hana Disk Free Space Alert , disks with >90% utilization detected",
                "severity": "critical",
                "query": "let DiskSpaceThreshold=90; SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Disks\" | summarize arg_max(TimeGenerated, *) by PATH_s,SUBPATH_s,DEVICE_ID_d |project Host=strcat(HOST_s,\" : \" ,USAGE_TYPE_s), Path=PATH_s,SizeinGb=round(TOTAL_SIZE_d,0),UsedGB=round(USED_SIZE_d,0) | project Host, Path, SizevsUsed=strcat(SizeinGb,\"/\", UsedGB),USEDPCT=round(UsedGB*100/SizeinGb,0) |where USEDPCT>DiskSpaceThreshold",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "Hana Disk Free Space Alert",
                "enabled": false
            },
            {
                "searchName": "Hana Services Not Active",
                "description": "Hana Services Not Active",
                "severity": "critical",
                "query": "let HanaConnectionTable=SAPHana_CL |where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) |summarize LastCall=arg_max(TimeGenerated,*) by HOST_s |project Host=HOST_s,MinSinceLastData=datetime_diff('Minute',now(),LastCall),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\"),LastStatus=Connection_s; HanaConnectionTable |join kind= fullouter (        SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d ) on Host | project Host=strcat(Instance,\"; \",iff(isempty(Host),Host1 ,Host)) , Status=case(IsCollectorOnline==\"Offline\",\"Unkown\",LastStatus==\"Failed\", \"Unkown\", Status==\"YES\", \"Active\", Status), CollectorStatus=IsCollectorOnline, Service=iff(isempty(Service),\"Unkown\",Service) | where CollectorStatus <> \"Offline\" and  Status <> \"Active\" ",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "Hana Services Not Active",
                "enabled": false
            },
            {
                "searchName": "Medium Priority Alerts Detected for SAP Hana",
                "description": "Medium Priority Alerts Detected for SAP Hana",
                "severity": "warning",
                "query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s; SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |join kind= inner (     lastdatapoint ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_HOST_s,ALERT_RATING_d |extend Priority=case(ALERT_RATING_d==1,\"Information\" ,ALERT_RATING_d==3,\"Medium\",ALERT_RATING_d==4,\"High\",\"NotDefined\")| where Priority == \"Medium\"",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "Medium Priority Alerts Detected for SAP HanaB",
                "enabled": false
            },
            {
                "searchName": "High Priority Alerts Detected for SAP Hana",
                "description": "High Priority Alerts Detected for SAP Hana",
                "severity": "critical",
                "query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s; SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |join kind= inner (     lastdatapoint ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_HOST_s,ALERT_RATING_d |extend Priority=case(ALERT_RATING_d==1,\"Information\" ,ALERT_RATING_d==3,\"Medium\",ALERT_RATING_d==4,\"High\",\"NotDefined\")| where Priority == \"High\" ",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "High Priority Alerts Detected for SAP Hana",
                "enabled": false
            },
            {
                "searchName": "SAP HANA Instance Unavailable",
                "description": "SAP HANA Instance Unavailable , check Hana daemon status",
                "severity": "critical",
                "query": "HanaAvailability_CL | summarize arg_max(TimeGenerated, *) by Computer | parse RawData with  Status\" \" FromDate \"-\" EventDate |project Computer , Status ,EventDate , TimeGenerated | where Status == \"Unavailable\" ",
                "alertTresholdValue": 0,
                "operator": "gt",
                "alertThrottleInMinutes": 60,
                "alertBreach": 1,
                "searchCategory": "Azure SAP HANA Monitor",
                "scheduleIntervalInMinutes": 15,
                "scheduleQueryTimeSpan": 15,
                "alertName": "SAP HANA Instance Unavailablea",
                "enabled": false
            }
        ]
    },
    "resources": [
        {
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "location": "[parameters('logAnalyticsRegion')]",
            "properties": {
                "features": {
                    "searchVersion": 1
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-11-01-preview",
                    "name": "[variables('omsSolutions').customSolution.name]",
                    "type": "views",
                    "id": "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), variables('omsSolutions').customSolution.name)]",
                    "dependson": [
                        "[Concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
                    ],
                    "properties": {
                        "Name": "[variables('omsSolutions').customSolution.name]",
                        "DisplayName": "[variables('omsSolutions').customSolution.displayName]",
                        "Description": "[variables('omsSolutions').customSolution.description]",
                        "Author": "[variables('omsSolutions').customSolution.author]",
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "HANA Data Collector Status",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "HANA Node Connectivity",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s | project Host=HOST_s,MinSinceLastData=datetime_diff('Minute',now(),LastCall),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\"),LastStatus=Connection_s |summarize count(Host) by IsCollectorOnline",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Offline",
                                                    "color": "#e81123"
                                                },
                                                {
                                                    "value": "Online",
                                                    "color": "#55d455"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let HanaNodes=SAPHana_CL | where CollectorType_s == \"Inventory\" | where Category==\"ReplicationStatus\" | where SERVICE_s == \"indexserver\" |summarize arg_max(TimeGenerated, *) by HOST_s, SERVICE_s, Instance_s |project Primary=HOST_s, Secondary=SECONDARY_HOST_s; let connectivitytable=SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=HOST_s,DB=Database_s ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s), StatusNumeric=case(PingResult_s == \"Fail\",4,  LastCall< ago(30m),2,  Connection_s==\"Failed\",3,1) | extend isHA=case(Host == toscalar(HanaNodes |project Primary) , \"PrimaryNode\" ,Host == toscalar(HanaNodes |project Secondary) , \"SecondaryNode\",\"not_HA_Node\"); connectivitytable| where isHA==\"not_HA_Node\" |project  DB=strcat(DB,\"|\",Host),LastStatus ,StatusNumeric |union(connectivitytable | where isHA == \"PrimaryNode\" | join kind= leftouter (     connectivitytable     | where isHA == \"SecondaryNode\" ) on DB | extend LastStatus=iff( LastStatus contains \"Successful\" or LastStatus1 contains \"Successful\",\"Successful\" , strcat(LastStatus ,\" | \" ,LastStatus1 )) |project  DB=strcat(DB,\"|\",Host),LastStatus ,StatusNumeric)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Host",
                                            "Value": "Status Numeric"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "1",
                                                    "color": "#ff8c00",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "2",
                                                    "color": "#eb3c00",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Offline",
                                                    "threshold": "3",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=strcat(Database_s,\"|\",HOST_s),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\") ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s),MinSinceLastData=datetime_diff('Minute',now(),LastCall)",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=strcat(Database_s,\"|\",HOST_s),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\") ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s),MinSinceLastData=datetime_diff('Minute',now(),LastCall)"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SAP MiniCheck Results",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Pass vs Fail",
                                        "Subtitle": "Linked to Config Checks Dashboard"
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s) |summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s) |summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\" |summarize count() by SubCategory_s",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Failed Check Category",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "0",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s) |summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\"",
                                        "NavigationSelect": {
                                            "Id": "SAP%20HANA%20Configuration%20Checks"
                                        },
                                        "Navigation": {
                                            "Host": "OMSPortal",
                                            "Link": {
                                                "Type": "Builder",
                                                "Id": "SAP%20HANA%20Configuration%20Checks"
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Host State",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Instance Status",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" and isnotempty(HOST_s) |summarize LastCall=arg_max(TimeGenerated, *)by HOST_s | project Host=HOST_s,MinSinceLastData=datetime_diff('Minute',now(),LastCall),IsDataValid=iff(LastCall< ago(1h),\"Unkown\",\"Online\"),Status=case(LastCall< ago(30m),\"Unkown\", All_Started_s==\"OK\",\"Healthy\",\"Warning\") |summarize count() by Status",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#ffb900",
                                                "#eb3c00",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Healthy",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Warning",
                                                    "color": "#ff8c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"All_Started\",Status=All_Started_s |union (SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"CPU\",Status=CPU_s), (SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"MEMORY\",Status=Memory_s), (SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"DISKDATA\",Status=DISKDATA_s), (SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"DISKLOG\",Status=DISKLOG_s), (SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |project Instance=strcat(Instance_ID_s,'-',Instance_Number_s),Component=\"DISKTRACE\",Status=DISKTRACE_s)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "OS",
                                            "Value": ""
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |union( SAPHana_CL | where CollectorType_s == \"Inventory\" and Category==\"HostInfo\" |summarize arg_max(TimeGenerated, *)by HOST_s )",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL |where CollectorType_s ==\"State\" |where Category == \"Host\" |summarize arg_max(TimeGenerated, *)by HOST_s |union( SAPHana_CL | where CollectorType_s == \"Inventory\" and Category==\"HostInfo\" |summarize arg_max(TimeGenerated, *)by HOST_s )"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Services",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Service Status",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": " let HanaConnectionTable= SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s,ConnectionStatus=Connection_s ; HanaConnectionTable |join kind= fullouter (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d ) on Host | project Host=strcat(Instance,\"; \",iff(isempty(Host),Host1 ,Host)) , Status=case(ConnectionStatus==\"Failed\", \"Unkown\", Status==\"YES\", \"Active\", Status), Service=iff(isempty(Service),\"Unkown\",Service) |summarize count(Service) by Status",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#fcd116",
                                                "#dd5900",
                                                "#e81123"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Active",
                                                    "color": "#55d455"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let HanaConnectionTable= SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s,ConnectionStatus=Connection_s ; HanaConnectionTable |join kind= fullouter (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d ) on Host | project Host=strcat(Instance,\"; \",iff(isempty(Host),Host1 ,Host)) , Status=case(ConnectionStatus==\"Failed\", \"Unkown\", Status==\"YES\", \"Active\", Status), Service=iff(isempty(Service),\"Unkown\",Service)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Instance",
                                            "Value": "Latency"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s ,ConnectionStatus=Connection_s |union (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d )",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s ,ConnectionStatus=Connection_s |union (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d )"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Alerts",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Open Alerts",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s;  SAPHana_CL  | where CollectorType_s ==\"Inventory\"  | where Category == \"Alerts\"  |join kind= inner (     lastdatapoint  ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_HOST_s,ALERT_RATING_d |extend Priority=case(ALERT_RATING_d==1,\"Information\" ,ALERT_RATING_d==3,\"Medium\",ALERT_RATING_d==4,\"High\",ALERT_RATING_d==5,\"Error\",\"NotDefined\")  |summarize AlertCount=count() by Priority",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#eb3c00",
                                                "#ff8c00",
                                                "#fff100"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "High",
                                                    "color": "#e81123"
                                                },
                                                {
                                                    "value": "Medium",
                                                    "color": "#ff8c00"
                                                },
                                                {
                                                    "value": "Information",
                                                    "color": "#00bcf2"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s;  SAPHana_CL  | where CollectorType_s ==\"Inventory\"  | where Category == \"Alerts\"  |join kind= inner (     lastdatapoint  ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project Alert=strcat(Database_s,\"|\",ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_RATING_d | sort by ALERT_RATING_d desc nulls last ",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB-Alert",
                                            "Value": "Priority Numeric"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#00bcf2",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "2",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "3",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by HOST_s ,Database_s,ALERT_ID_d | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),Rating=ALERT_RATING_d | project DB, Alert, Rating",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by HOST_s ,Database_s,ALERT_ID_d | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),Rating=ALERT_RATING_d | project DB, Alert, Rating"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Host and Service CPU Utilization",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Host Utilization",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" | summarize CPU=avg(PerfValue_d) by Host=HOST_s, bin (TimeGenerated, 15m)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Service\" and PerfCounter_s ==\"PROCESS_CPU\" and notempty(PerfInstance_s) and PerfInstance_s !='daemon' | summarize CPU=avg(PerfValue_d) by Path=strcat(HOST_s,\":\",PerfInstance_s), bin (TimeGenerated, 15m)",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "operation": "Average",
                                        "ColumnsTitle": {
                                            "Name": "Type",
                                            "Value": "ProcessCPU"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Service\" and PerfCounter_s ==\"PROCESS_CPU\" and notempty(PerfInstance_s) and PerfInstance_s !='daemon' | summarize CPU=avg(PerfValue_d) by Path=strcat(HOST_s,\":\",PerfInstance_s), bin (TimeGenerated, 15m)|where {selected item} ",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Service\" and PerfCounter_s ==\"PROCESS_CPU\" and notempty(PerfInstance_s) and PerfInstance_s !='daemon' | summarize CPU=avg(PerfValue_d) by Path=strcat(HOST_s,\":\",PerfInstance_s), bin (TimeGenerated, 15m)|where {selected item} "
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Host Memory Usage",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Data types over time",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s == \"FREE_PHYSICAL_MEMORY\" |summarize FREE=avg(PerfValue_d) by HOST_s , bin(TimeGenerated, 15m) |project Host=HOST_s,FREE,TimeGenerated |join kind= inner (     SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s == \"USED_PHYSICAL_MEMORY\" |summarize USED=avg(PerfValue_d) by HOST_s , bin(TimeGenerated, 15m) |project Host=HOST_s,USED,TimeGenerated ) on Host, TimeGenerated   |project Host, ['Memory %Used']=round((USED /(FREE+USED))*100,0) ,TimeGenerated",
                                        "Callout": {
                                            "Title": "Avg per hour",
                                            "Series": "",
                                            "Operation": "Average"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" |where PerfValue_d >0 | where PerfObject_s ==\"Memory\" and PerfCounter_s==\"DatabaseResidentGB\" |summarize arg_max(TimeGenerated, *) by HOST_s ,Database_s,PerfObject_s,PerfCounter_s | project ['DB&Host']=strcat(Database_s,\" | \",HOST_s) ,Counter=\"DBResidentGB\",Value=round(PerfValue_d,1) |union( SAPHana_CL | where CollectorType_s == \"Performance\" |where PerfValue_d >0 | where PerfObject_s ==\"Host\" and PerfCounter_s in (\"USEDMEMORYGB\",\"TOTALRESIDENTGB\",\"ALLOCATIONLIMITGB\") |summarize arg_max(TimeGenerated, *) by HOST_s ,PerfObject_s,PerfCounter_s | project ['DB&Host']=HOST_s ,Counter=PerfCounter_s ,Value=round(PerfValue_d,1))",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB | HOST",
                                            "Value": "USEDGB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Host Memory Usage",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Used vs Total Resident Memory",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": " SAPHana_CL     | where CollectorType_s == \"Performance\"     | where PerfObject_s ==\"ServiceMemory\" and PerfCounter_s == \"TOTAL_MEMORY_USED_SIZE\"     |summarize USEDGB=max(PerfValue_d) by  HOST_s ,PerfInstance_d , bin(TimeGenerated, 15m)     |join kind= inner (          SAPHana_CL     | where CollectorType_s == \"Inventory\" and Category ==\"Services\"      |summarize arg_max(TimeGenerated, *) by  HOST_s ,PORT_d      |project SERVICE_NAME_s , PORT_d      ) on $left.PerfInstance_d==$right.PORT_d     |project Host=HOST_s, Service= SERVICE_NAME_s , AggregatedValue=USEDGB, TimeGenerated ",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " SAPHana_CL     | where CollectorType_s == \"Performance\"     | where PerfObject_s ==\"ServiceMemory\" and PerfCounter_s == \"TOTAL_MEMORY_USED_SIZE\"     |summarize arg_max(TimeGenerated, *) by  HOST_s ,PerfInstance_d     |join kind= inner (          SAPHana_CL     | where CollectorType_s == \"Inventory\" and Category ==\"Services\"      |summarize arg_max(TimeGenerated, *) by  HOST_s ,PORT_d      |project SERVICE_NAME_s , PORT_d      ) on $left.PerfInstance_d==$right.PORT_d     |project Host=HOST_s, Service= SERVICE_NAME_s1 , USEDGB=round(PerfValue_d,2)",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Database|Host",
                                            "Value": "GB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Memory\" and PerfCounter_s in(\"DatabaseResidentGB\",\"PeakUsedMemoryGB\",\"UsedMemoryGB\") |summarize avg(PerfValue_d) by HOST_s ,PerfObject_s,PerfCounter_s, bin(TimeGenerated, 15m) |where {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where PerfObject_s ==\"Memory\" and PerfCounter_s in(\"DatabaseResidentGB\",\"PeakUsedMemoryGB\",\"UsedMemoryGB\") |summarize avg(PerfValue_d) by HOST_s ,PerfObject_s,PerfCounter_s, bin(TimeGenerated, 15m) |where {selected item}"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Memory Usage by Component",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" |where PerfObject_s == \"Memory\" and PerfCounter_s ==\"Component\" |summarize arg_max(TimeGenerated, *) by HOST_s,PerfInstance_s |project strcat(HOST_s,':',PerfInstance_s),MEMUsageGB=round(PerfValue_d/1024,2)|sort by MEMUsageGB desc",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" |where PerfObject_s == \"Memory\" and PerfCounter_s ==\"Component\" |summarize arg_max(TimeGenerated, *) by HOST_s,PerfInstance_s |project Host=HOST_s,Component=PerfInstance_s,MEMUsageGB=round(PerfValue_d/1024,2) |sort by MEMUsageGB desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Host",
                                            "Value": "UsedGB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL |where CollectorType_s ==\"Performance\" |where PerfObject_s == \"Memory\" and PerfCounter_s ==\"Component\" |summarize MEMUsageGB=round(avg(PerfValue_d/1024),2)by Host=HOST_s,Component=PerfInstance_s|where  {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL |where CollectorType_s ==\"Performance\" |where PerfObject_s == \"Memory\" and PerfCounter_s ==\"Component\" |summarize MEMUsageGB=round(avg(PerfValue_d/1024),2)by Host=HOST_s,Component=PerfInstance_s|where  {selected item}"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "DATABASES",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "DB Size GB",
                                        "Subtitle": "CLICK TO NAVIGATE DB VIEW"
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Backup\" |summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s, Instance_s , ENTRY_TYPE_NAME_s | where SERVICE_NAME_s == \"indexserver\"  | where ENTRY_TYPE_NAME_s == \"complete data backup\"  |project DB=Database_s,\tSizeGB=round(ESTIMATED_SIZE_d/1024,0)",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#55d455",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s ,PART_ID_d |summarize TotalCount=sum(RECORD_COUNT_d) by Database_s,TableName_s  |top 10 by TotalCount desc nulls last |project Table=strcat(Database_s,\" | \",TableName_s)  , TotalCount",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "DB | Table",
                                            "Value": "RecordCount"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "Id": "Azure%20SAP%20HANA%20Database%20SizeGB"
                                        },
                                        "Navigation": {
                                            "Host": "OMSPortal",
                                            "Link": {
                                                "Type": "Builder",
                                                "Id": "Azure%20SAP%20HANA%20Database%20SizeGB"
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Disks",
                                        "Subtitle": "USed GB"
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Disks\" | summarize arg_max(TimeGenerated, *) by PATH_s,SUBPATH_s,DEVICE_ID_d |project Host=strcat(HOST_s,\" : \" ,USAGE_TYPE_s), Path=PATH_s,SizeinGb=round(TOTAL_SIZE_d,0),UsedGB=round(USED_SIZE_d,0) | project strcat(Host,\" : \", Path), UsedGB",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#eb3c00",
                                                "#ffb900",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Disks\" | summarize arg_max(TimeGenerated, *) by PATH_s,SUBPATH_s,DEVICE_ID_d |project Host=strcat(HOST_s,\" : \" ,USAGE_TYPE_s), Path=PATH_s,SizeinGb=round(TOTAL_SIZE_d,0),UsedGB=round(USED_SIZE_d,0) | project Host, Path, SizevsUsed=strcat(SizeinGb,\"/\", UsedGB),UsedPCT=round(UsedGB*100/SizeinGb,0)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Host",
                                            "Value": "%Used"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "80",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Disks\" | summarize arg_max(TimeGenerated, *) by PATH_s,SUBPATH_s,DEVICE_ID_d |project Host=strcat(HOST_s,\" : \" ,USAGE_TYPE_s), Path=PATH_s,SizeinGb=round(TOTAL_SIZE_d,0),UsedGB=round(USED_SIZE_d,0) | project Host, Path, SizeinGb, UsedGB ,UsedPCT=round(UsedGB*100/SizeinGb,0)",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Disks\" | summarize arg_max(TimeGenerated, *) by PATH_s,SUBPATH_s,DEVICE_ID_d |project Host=strcat(HOST_s,\" : \" ,USAGE_TYPE_s), Path=PATH_s,SizeinGb=round(TOTAL_SIZE_d,0),UsedGB=round(USED_SIZE_d,0) | project Host, Path, SizeinGb, UsedGB ,UsedPCT=round(UsedGB*100/SizeinGb,0)"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Volumes",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category == \"Volumes\"  |summarize arg_max(TimeGenerated, *) by HOST_s,FILE_NAME_s |project Volume=strcat(HOST_s,\"/ Volume:\",VOLUME_ID_d),SizeinGB=round(SIZE_d/1024/1024/1024,1)",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#442359",
                                                "#00bcf2",
                                                "#009e49"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category == \"Volumes\"  |summarize arg_max(TimeGenerated, *) by HOST_s,FILE_NAME_s |project Volume=strcat(HOST_s,\"/ Volume:\",VOLUME_ID_d),SizeinGB=round(SIZE_d/1024/1024/1024,1)",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Volume",
                                            "Value": "SizeinGB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Performance - Volumes",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "Read Throughput MB",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==\"Read_MB_Sec\" |summarize Throughput=avg(PerfValue_d) by Host=strcat(\"Read:\",Database_s,\":\",SERVICE_NAME_s,\":\",PerfInstance_s),bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Write Throughput MB",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==\"Write_MB_Sec\" |summarize Throughput=avg(PerfValue_d) by Host=strcat(\"Write:\",Database_s,\":\",SERVICE_NAME_s,\":\",PerfInstance_s),bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "TOTAL IO  Read / Write ",
                                                "Subtitle": "by DATA / LOG"
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s in (\"WRITE_COUNT\",\"READ_COUNT\") |extend Path=strcat(PerfCounter_s,\"|\",TYPE_s, \"|\",Database_s,\"|\",HOST_s) |summarize AggregatedValue=max(PerfValue_d) by Path, bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Performance -Volumes",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Write Latency Millisecond",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize AggeregatedValue=max(PerfValue_d/1000) by  bin(TimeGenerated, 15m),Path|render timechart",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize arg_max(TimeGenerated, *) by Path |project Path ,Lantency_ms=round(PerfValue_d/1000,1) |sort by Lantency_ms  desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Path",
                                            "Value": "Latency MilliSecond"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize Lantency_ms=round(avg(PerfValue_d/1000),1) by Path, bin(TimeGenerated, 15m)|where  {selected item} ",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize Lantency_ms=round(avg(PerfValue_d/1000),1) by Path, bin(TimeGenerated, 15m)|where  {selected item} "
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "PErformance Volumes",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Read Latency Millisecond",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_READ_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize AggeregatedValue=max(PerfValue_d/1000) by  bin(TimeGenerated, 15m),Path|render timechart",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_READ_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize arg_max(TimeGenerated, *) by Path |project Path ,Lantency_ms=round(PerfValue_d/1000,1) |sort by Lantency_ms  desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Path",
                                            "Value": "Latency MilliSecond"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_READ_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize Lantency_ms=round(avg(PerfValue_d/1000),1) by Path, bin(TimeGenerated, 15m)|where  {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_READ_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |summarize Lantency_ms=round(avg(PerfValue_d/1000),1) by Path, bin(TimeGenerated, 15m)|where  {selected item}"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "PErformance Network In/Out and SavePoint ",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "Network In MB",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s ==\"Performance\" | where PerfObject_s  == \"Host\" and PerfCounter_s ==\"NETWORK_IN_MB\" |summarize AvgMB=avg(PerfValue_d) by PATH=strcat(PerfCounter_s,':',HOST_s), bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Network Out MB",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s ==\"Performance\" | where PerfObject_s  == \"Host\" and PerfCounter_s ==\"NETWORK_OUT_MB\" |summarize AvgMB=avg(PerfValue_d) by PATH=strcat(PerfCounter_s,':',HOST_s), bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "SavePoint Duration sec",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"SavePoint\"   and PerfCounter_s ==\"DurationSec\" |summarize Durationsec=avg(PerfValue_d) by Path=strcat(PerfCounter_s,\";\",Database_s,\": Volume:\",VOLUME_ID_d) ,bin(TimeGenerated,1h)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Licence Usage",
                                        "Subtitle": "Limit vs Used"
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize Limit=max(PRODUCT_LIMIT_d), Usage=max(PRODUCT_USAGE_d) by SYSTEMID=SYSTEM_ID_s ,bin(TimeGenerated, 1h)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize arg_max(TimeGenerated, *) by SYSTEM_ID_s,HOST_s |project SYSTEMID=SYSTEM_ID_s ,Valid=VALID_s,LimitandUsage=strcat(tostring(PRODUCT_LIMIT_d),'/',tostring(PRODUCT_USAGE_d)),UsagePCT=round(PRODUCT_USAGE_d*100/PRODUCT_LIMIT_d,0) | project SYSTEMID, Valid, LimitandUsage ,UsagePCT",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Type",
                                            "Value": "%Used"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "80",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Backup Size Estimations",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Backup\" | summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s,ENTRY_TYPE_NAME_s |project DB=strcat(Instance_s,\" : \",Database_s,\" : \",SERVICE_NAME_s),SizeinGB= round(ESTIMATED_SIZE_d/1024,2)",
                                        "CenterLegend": {
                                            "Text": "Total_GB",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Backup\" | summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s,ENTRY_TYPE_NAME_s |project DB=strcat(Instance_s,\" : \",Database_s,\" : \",SERVICE_NAME_s),BackupType=ENTRY_TYPE_NAME_s,SizeinGB= round(ESTIMATED_SIZE_d/1024,2)",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB",
                                            "Value": "SizeinGB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SMART ANALYTICS  - TRENDS",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "HOST CPU Utilization Trend ",
                                                "Subtitle": "Based on Last 7 Days"
                                            },
                                            "LineChart": {
                                                "Query": "let trend7days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(7d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256; let trend30days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(30d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(30d),now(), 2h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand  TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  360; trend7days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend7Day|\",HOST_s) , bin(TimeGenerated, 1h) |union (trend30days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend30Day|\",HOST_s) , bin(TimeGenerated, 1h)), (  trend7days |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"Actual|\",HOST_s) , bin(TimeGenerated, 1h)  ) |summarize AggregatedValue=avg(AvgValue) by Host, bin(TimeGenerated, 1h)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Memory Utilization Trends ",
                                                "Subtitle": "Based on Last 7 Days"
                                            },
                                            "LineChart": {
                                                "Query": "let trending=SAPHana_CL | where CollectorType_s == \"Performance\"  | where  PerfCounter_s in(\"UsedMemoryGB\") |extend Path=strcat(HOST_s,':',PerfCounter_s) |where TimeGenerated >= ago(7d) | make-series avgValue=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by Path | extend avgInterpolated = series_fill_linear(avgValue) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 ; trending |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend|\",Path) , bin(TimeGenerated, 1h) |union (  trending |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"Actual|\",Path) , bin(TimeGenerated, 1h)  ) |summarize AggregatedValue=avg(AvgValue) by Host, bin(TimeGenerated, 1h)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Disk Latency ",
                                                "Subtitle": "Worst 3 Based on Last 7 Days"
                                            },
                                            "LineChart": {
                                                "Query": "let worst3=SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |where TimeGenerated >= ago(7d) |summarize avg(PerfValue_d)  by Path |top 3 by avg_PerfValue_d desc nulls last|project Path;  let trending=SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfObject_s  == \"Volumes\"   and PerfCounter_s ==(\"AVG_WRITE_TIME_MICROS\") |extend Path=strcat(PerfInstance_s,\"|\",Database_s,\"|\",HOST_s) |where Path in (worst3) |where TimeGenerated >= ago(7d) | make-series avgValue=avg(PerfValue_d/1000) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by Path | extend avgInterpolated = series_fill_linear(avgValue) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 ; trending |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend|\",Path) , bin(TimeGenerated, 1h) |union (  trending |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"Actual|\",Path) , bin(TimeGenerated, 1h)  ) |summarize AggregatedValue=avg(AvgValue) by Host, bin(TimeGenerated, 1h)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "NotableQueriesBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "List of queries",
                                        "newGroup": false,
                                        "preselectedFilters": "Type, Computer",
                                        "renderMode": "grid"
                                    },
                                    "queries": [
                                        {
                                            "query": "let query=\"e7492f87-6680-7a18-9614-b8467932922c|S4X-30|azesapsbxs4db1|S4X\";  SAPHana_CL  |where    CollectorType_s==\"Inventory\" and    Category==\"Statement\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)  |where path==query |summarize arg_max(TimeGenerated, *) by path |project path,STATEMENT_STRING_s  //edit query to analyze",
                                            "displayName": "Get Query Details"
                                        },
                                        {
                                            "query": "let query=\"e7492f87-6680-7a18-9614-b8467932922c|S4X-30|azesapsbxs4db1|S4X\";  let trendthreshold=0.1;  let daystocheck=ago(2d);  let bininterval=15m; SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |where path==query |summarize avg(AVG_EXECUTION_TIME_d/1000) by path,bin(TimeGenerated, bininterval) |render timechart ",
                                            "displayName": "Query Execution Time History"
                                        },
                                        {
                                            "query": "let trendthreshold=0.2; let daystocheck=ago(2d); SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(daystocheck,now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |where trend >= trendthreshold |top 10 by trend desc nulls last | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 |render timechart",
                                            "displayName": "Get Top 10 Trending Queries"
                                        },
                                        {
                                            "query": "let trend7days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(7d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256; let trend30days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(30d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(30d),now(), 2h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand  TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  360; trend7days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend7Day|\",HOST_s) , bin(TimeGenerated, 1h) |union (trend30days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend30Day|\",HOST_s) , bin(TimeGenerated, 1h)), (  trend7days |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"ActualCPU|\",HOST_s) , bin(TimeGenerated, 1h)  ) |summarize AvgCPU=avg(AvgValue) by Host, bin(TimeGenerated, 1h) |render timechart ",
                                            "displayName": "CPU Actual vs Trends 7Days / 30Days"
                                        },
                                        {
                                            "query": "let trending=SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfCounter_s in(\"UsedMemoryGB\") |extend Path=strcat(HOST_s,':',PerfCounter_s) |where TimeGenerated >= ago(7d) | make-series avgValue=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by Path | extend avgInterpolated = series_fill_linear(avgValue) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 ; trending |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend|\",Path) , bin(TimeGenerated, 1h) |union (  trending |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"Actual|\",Path) , bin(TimeGenerated, 1h)  ) |summarize UsedMemGB=avg(AvgValue) by Host, bin(TimeGenerated, 1h) |render timechart ",
                                            "displayName": "Used Memory Actual vs Trend 7 Days"
                                        },
                                        {
                                            "query": "let searchlastndays=ago(7d); let forecastndays=30; let bin_size=1d; let pasttrend=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= searchlastndays | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(searchlastndays,now(), 1d) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) | extend rp=series_fit_line_avgInterpolated_line_fit[(arraylength(avgInterpolated)-1)] | extend days_to_zero = rp/-series_fit_line_avgInterpolated_slope/(1d/1d) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256; pasttrend |project Host=HOST_s,avgCPU=avgInterpolated,TimeGenerated |union ( range i from 0 to forecastndays  step 1 | project TimeGenerated =datetime_add('day',i,now()), y=toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s  |project series_fit_line_avgInterpolated_slope)*i ,  cpu=toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s|project avgInterpolated) ,Host=strcat(toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s|project HOST_s),'-Forecast') |extend avgCPU=cpu+y |project TimeGenerated,avgCPU,Host) |render timechart ",
                                            "displayName": "CPU Forecast for n days based on past n days"
                                        },
                                        {
                                            "query": "let prev7days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfCounter_s ==\"UsedMemoryGB\" |where TimeGenerated >= ago(7d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1d) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) | extend rp=series_fit_line_avgInterpolated_line_fit[(arraylength(avgInterpolated)-1)] | extend days_to_zero = rp/-series_fit_line_avgInterpolated_slope/(1d/1d) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 |summarize arg_max(TimeGenerated,*) by HOST_s; let bin_size=1d; range i from 0 to 30d/bin_size step 5 |extend Day=strcat('day',tostring(toint(i))) | project t=i*1d, y=toscalar(prev7days |project series_fit_line_avgInterpolated_slope)*i , cpu=toscalar(prev7days |project avgInterpolated),Day |extend forecastMeM=cpu+y |project t,Day,forecastMeM =iff(forecastMeM<0,toreal(0),forecastMeM) |render barchart ",
                                            "displayName": "Memory Forecast based on last 7days"
                                        },
                                        {
                                            "query": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last |project path |join kind= inner (     SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" |where TimeGenerated > ago(7d) | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |project path,ACCESSED_TABLE_NAMES_s ) on path |extend Tables=split(ACCESSED_TABLE_NAMES_s,',') |mvexpand Tables to typeof(string) |summarize count() by Tables",
                                            "displayName": "Tables Accessed by Trending Queries"
                                        },
                                        {
                                            "query": "let tabletosearch=\"LIVECACHE\";  SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |extend Tables=split(ACCESSED_TABLE_NAMES_s,',') |mvexpand Tables to typeof(string) |where Tables contains tabletosearch |project path, ACCESSED_TABLE_NAMES_s  |distinct path",
                                            "displayName": "Find queries accessing specific table"
                                        }
                                    ]
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "LineChartCalloutBuilderTile",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "LineChart": {
                                    "Query": "SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" | summarize CPU=avg(PerfValue_d) by Host=HOST_s, bin (TimeGenerated, 15m)",
                                    "Callout": {
                                        "Title": "Average",
                                        "Series": "",
                                        "Operation": "Average"
                                    },
                                    "yAxis": {
                                        "isLogarithmic": false,
                                        "units": {
                                            "baseUnitType": "Percentage",
                                            "baseUnit": "ZeroToOne",
                                            "displayUnit": "ZeroToOne"
                                        },
                                        "customLabel": ""
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "SAPHana_CL  | limit 1 | project TimeGenerated",
                                        "Message": "Make sure collector runbook is running on Hybrid Runbook VM"
                                    }
                                }
                            }
                        }
                            }
                },{
                    "apiVersion": "2015-11-01-preview",
                    "name": "Azure  HANA Configuration Checks",
                    "type": "views",
                    "id": "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure  HANA Configuration Checks')]",
                    "dependson": [
                        "[Concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
                    ],
                    "properties": {
                        "Id": "Azure  HANA Configuration Checks",
                        "Name": "Azure  HANA Configuration Checks",
                        "Author": "[variables('omsSolutions').customSolution.author]",
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SAP MiniCheck Results",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Pass vs Fail",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL |where TimeGenerated >= ago(31d) | where Category == \"ConfigurationCheck\" | where SubCategory_s <> \"SAP HANA MINI CHECKS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\" |summarize count() by SubCategory_s",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Failed Check Category",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "0",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\"",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\""
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "TwoTrendsAndListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "MiniChecks History",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Trend1": {
                                        "Legend": "Passed Tests",
                                        "LegendColor": "#55d455",
                                        "ChartQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|where RESULT_s==\"Pass\"|sort by TimeGenerated desc",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "Trend2": {
                                        "Legend": "Failed Tests",
                                        "LegendColor": "#e81123",
                                        "ChartQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|where RESULT_s==\"Fail\"|sort by TimeGenerated desc",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |where RESULT_s==\"Fail\" |project DESCRIPTION_s ,CONDITION_s,Value_d",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Failed Check Detail",
                                            "Value": "Result"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\"",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |where RESULT_s==\"Fail\""
                                        }
                                    },
                                    "Blade": {
                                        "NavigationSelect": {}
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "OPERATING SYSTEM",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"OPERATING SYSTEM\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OPERATING SYSTEM\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"OPERATING SYSTEM\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OPERATING SYSTEM\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OPERATING SYSTEM\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "DISKS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"DISKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"DISKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"DISKS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"DISKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"DISKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "MEMORY",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"MEMORY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"MEMORY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"MEMORY\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"MEMORY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"MEMORY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "TABLES",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TABLES\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLES\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TABLES\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLES\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLES\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "TRACES, DUMPS AND LOGS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TRACES, DUMPS AND LOGS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRACES, DUMPS AND LOGS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TRACES, DUMPS AND LOGS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRACES, DUMPS AND LOGS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRACES, DUMPS AND LOGS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "STATISTICS SERVER",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"STATISTICS SERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"STATISTICS SERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"STATISTICS SERVER\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"STATISTICS SERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"STATISTICS SERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "TRANSACTIONS AND THREADS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TRANSACTIONS AND THREADS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRANSACTIONS AND THREADS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TRANSACTIONS AND THREADS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRANSACTIONS AND THREADS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TRANSACTIONS AND THREADS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "BACKUP",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"BACKUP\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BACKUP\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"BACKUP\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BACKUP\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BACKUP\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "LOCKS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"LOCKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LOCKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"LOCKS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LOCKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LOCKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SQL",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SQL\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SQL\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SQL\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SQL\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SQL\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "APPLICATION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"APPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"APPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"APPLICATION\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"APPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"APPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SECURITY",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SECURITY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SECURITY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SECURITY\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SECURITY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SECURITY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "LICENSE",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"LICENSE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LICENSE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"LICENSE\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LICENSE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"LICENSE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "NETWORK",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"NETWORK\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NETWORK\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"NETWORK\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NETWORK\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NETWORK\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "XS ENGINE",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"XS ENGINE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"XS ENGINE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"XS ENGINE\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"XS ENGINE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"XS ENGINE\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "NAMESERVER",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"NAMESERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NAMESERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"NAMESERVER\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NAMESERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"NAMESERVER\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SYSTEM REPLICATION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SYSTEM REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SYSTEM REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SYSTEM REPLICATION\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SYSTEM REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SYSTEM REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "OBJECTS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"OBJECTS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OBJECTS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"OBJECTS\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OBJECTS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"OBJECTS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "BW",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"BW\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BW\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"BW\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BW\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"BW\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "CONSISTENCY",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"CONSISTENCY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"CONSISTENCY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"CONSISTENCY\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"CONSISTENCY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"CONSISTENCY\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SMART DATA ACCESS / SMART DATA INTEGRATION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SMART DATA ACCESS / SMART DATA INTEGRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SMART DATA ACCESS / SMART DATA INTEGRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"SMART DATA ACCESS / SMART DATA INTEGRATION\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SMART DATA ACCESS / SMART DATA INTEGRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"SMART DATA ACCESS / SMART DATA INTEGRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "ADMINISTRATION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"ADMINISTRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"ADMINISTRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"ADMINISTRATION\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"ADMINISTRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"ADMINISTRATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "TABLE REPLICATION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Summary",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TABLE REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Pass",
                                                    "color": "#55d455"
                                                },
                                                {
                                                    "value": "Fail",
                                                    "color": "#eb3c00"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLE REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | where SubCategory_s == \"TABLE REPLICATION\" |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Desc=strcat(DESCRIPTION_s, \" | \",SAP_NOTE_s),Condition=CONDITION_s,Result=RESULT_s,Value_d |sort by Result asc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Test",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLE REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s ==\"TABLE REPLICATION\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by Database_s,SubCategory_s,DESCRIPTION_s ,NAME_s |project CheckID=CHID_d, SAPNOTE=SAP_NOTE_s, CheckName=NAME_s,Desc=DESCRIPTION_s ,Result=RESULT_s,Value_d , CONDITION_s |sort by Result asc"
                                        }
                                    }
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "SingleQueryDonutBuilderTileV1",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Donut": {
                                    "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\"  | where SubCategory_s <> \"SAP HANA MINI CHECKS\"  |where isnotempty(NAME_s)   and  isnotempty(DESCRIPTION_s)|summarize arg_max(TimeGenerated, *) by SubCategory_s,DESCRIPTION_s ,NAME_s |project Database_s,NAME_s,SubCategory_s,DESCRIPTION_s ,CONDITION_s,Value_d,RESULT_s |summarize count() by RESULT_s",
                                    "CenterLegend": {
                                        "Text": "Total",
                                        "Operation": "Sum",
                                        "ArcsToSelect": []
                                    },
                                    "Options": {
                                        "colors": [
                                            "#00188f",
                                            "#0072c6",
                                            "#00bcf2"
                                        ],
                                        "valueColorMapping": [
                                            {
                                                "value": "Pass",
                                                "color": "#55d455"
                                            },
                                            {
                                                "value": "Fail",
                                                "color": "#eb3c00"
                                            }
                                        ]
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "SAPHana_CL | where Category == \"ConfigurationCheck\" | limit 1 | project TimeGenerated",
                                        "Message": "Make sure collector runbook is running on Hybrid Runbook VM"
                                    }
                                }
                            }
                        }
                    }
                }
                ,{
                    "apiVersion": "2015-11-01-preview",
                    "name": "Azure HANA Landscape",
                    "type": "views",
                    "id": "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Landscape')]",
                    "dependson": [
                        "[Concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
                    ],
                    "properties": {
                        "Id": "Azure HANA Landscape",
                        "Name": "Azure HANA Landscape",
                        "Author": "[variables('omsSolutions').customSolution.author]",
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "NumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Landscape",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Legend": "Monitored Instances",
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"HostInfo\" |summarize arg_max(TimeGenerated, *) by HOST_s  | count",
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"HostInfo\" |where  TimeGenerated > ago(30d) |summarize arg_max(TimeGenerated, *) by HOST_s  | project HOST_s , BUILD_VERSION_s , \t OP_SYS_s , MEM_GB= round(PHYS_MEM_GB_d,0) ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "HOST  |  VERSION | OS ",
                                            "Value": "MEM TiB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "NumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "LANDSCAPE DISTRIBUTION",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"Landscape\" |summarize arg_max(TimeGenerated, *) by HOST_s  | project strcat(HOST_s ,\" | \", INDEX_ACT_ROLE_s ,\" | \", NAME_ACT_ROLE_s,\" | \",INDEX_CFG_ROLE_s,\" | \", NAME_CFG_ROLE_s)|count",
                                        "Legend": "Servers",
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"Landscape\" |summarize arg_max(TimeGenerated, *) by HOST_s  | project strcat(HOST_s ,\" | \", INDEX_ACT_ROLE_s ,\" | \", NAME_ACT_ROLE_s,\" | \",INDEX_CFG_ROLE_s,\" | \", NAME_CFG_ROLE_s)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "HOST | INDEXACT | NAMEACT| INDEXCFG | NAMECFG",
                                            "Value": ""
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"Landscape\" |summarize arg_max(TimeGenerated, *) by HOST_s  | project strcat(HOST_s ,\" | \", INDEX_ACT_ROLE_s ,\" | \", NAME_ACT_ROLE_s,\" | \",INDEX_CFG_ROLE_s,\" | \", NAME_CFG_ROLE_s)",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"Landscape\" |summarize arg_max(TimeGenerated, *) by HOST_s  | project strcat(HOST_s ,\" | \", INDEX_ACT_ROLE_s ,\" | \", NAME_ACT_ROLE_s,\" | \",INDEX_CFG_ROLE_s,\" | \", NAME_CFG_ROLE_s)"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Monitoring Enabled Servers",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Avg Ping Time ms",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"State\" and Category==\"Connectivity\" |extend Hostname=HOST_s | summarize AggregatedValue=avg(Latency_d) by Hostname ,bin(TimeGenerated, 15m)",
                                        "Callout": {
                                            "Title": "Avg Ping Time ",
                                            "Series": "",
                                            "Operation": "Last Sample"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"State\" and Category==\"Connectivity\" |summarize arg_max(TimeGenerated, *) by HOST_s  |extend Hostname=HOST_s |project Hostname,Connection_s, PingResult_s , PingLatency_ms=Latency_d",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Type",
                                            "Value": "Ping_ms"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "10",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "50",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"State\" and Category==\"Connectivity\" |summarize arg_max(TimeGenerated, *) by HOST_s  |extend Hostname=HOST_s |project Hostname,Connection_s, PingResult_s , PingLatency_ms=Latency_d",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"State\" and Category==\"Connectivity\" |summarize arg_max(TimeGenerated, *) by HOST_s  |extend Hostname=HOST_s |project Hostname,Connection_s, PingResult_s , PingLatency_ms=Latency_d"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "LICENSE Usage",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Used",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize Limit=max(PRODUCT_LIMIT_d), Usage=max(PRODUCT_USAGE_d) by SYSTEMID=SYSTEM_ID_s ,bin(TimeGenerated, 1h)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize arg_max(TimeGenerated, *) by SYSTEM_ID_s,HOST_s |project SYSTEMID=SYSTEM_ID_s ,Valid=VALID_s,LimitandUsage=strcat(tostring(PRODUCT_LIMIT_d),'/',tostring(PRODUCT_USAGE_d)),UsagePCT=round(PRODUCT_USAGE_d*100/PRODUCT_LIMIT_d,0) | project SYSTEMID, Valid, LimitandUsage ,UsagePCT",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "SYSTEM | LICENSE",
                                            "Value": "Used_Pct"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize arg_max(TimeGenerated, *) by SYSTEM_ID_s,HOST_s |project SYSTEMID=SYSTEM_ID_s ,Valid=VALID_s,LimitandUsage=strcat(tostring(PRODUCT_LIMIT_d),'/',tostring(PRODUCT_USAGE_d)),UsagePCT=round(PRODUCT_USAGE_d*100/PRODUCT_LIMIT_d,0) | project SYSTEMID, Valid, LimitandUsage ,UsagePCT",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"License\" |summarize arg_max(TimeGenerated, *) by SYSTEM_ID_s,HOST_s |project SYSTEMID=SYSTEM_ID_s ,Valid=VALID_s,LimitandUsage=strcat(tostring(PRODUCT_LIMIT_d),'/',tostring(PRODUCT_USAGE_d)),UsagePCT=round(PRODUCT_USAGE_d*100/PRODUCT_LIMIT_d,0) | project SYSTEMID, Valid, LimitandUsage ,UsagePCT"
                                        }
                                    }
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "DoubleNumberBuilderTile",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "TileOne": {
                                    "Legend": "INSTANCE",
                                    "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"HostInfo\" |summarize arg_max(TimeGenerated, *) by HOST_s  | where HOST_s <> \"10.80.4.30\"   | count"
                                },
                                "TileTwo": {
                                    "Legend": "DATABASE",
                                    "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category ==\"Database\" |summarize arg_max(TimeGenerated, *) by Database_s |count"
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | limit 1 | project TimeGenerated",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
                ,{
                    "apiVersion": "2015-11-01-preview",
                    "name": "Azure HANA Databases",
                    "type": "views",
                    "id": "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Databases')]",
                    "dependson": [
                        "[Concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
                    ],
                    "properties": {
                        "Id": "Azure HANA Databases",
                        "Name": "Azure HANA Databases",
                        "Author": "[variables('omsSolutions').customSolution.author]",
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "HANA Data Collector Status",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "HANA Node Connectivity",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s | project Host=HOST_s,MinSinceLastData=datetime_diff('Minute',now(),LastCall),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\"),LastStatus=Connection_s |summarize count(Host) by IsCollectorOnline",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Offline",
                                                    "color": "#e81123"
                                                },
                                                {
                                                    "value": "Online",
                                                    "color": "#55d455"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let HanaNodes=SAPHana_CL | where CollectorType_s == \"Inventory\" | where Category==\"ReplicationStatus\" | where SERVICE_s == \"indexserver\" |summarize arg_max(TimeGenerated, *) by HOST_s, SERVICE_s, Instance_s |project Primary=HOST_s, Secondary=SECONDARY_HOST_s; let connectivitytable=SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=HOST_s,DB=Database_s ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s), StatusNumeric=case(PingResult_s == \"Fail\",4,  LastCall< ago(30m),2,  Connection_s==\"Failed\",3,1) | extend isHA=case(Host == toscalar(HanaNodes |project Primary) , \"PrimaryNode\" ,Host == toscalar(HanaNodes |project Secondary) , \"SecondaryNode\",\"not_HA_Node\"); connectivitytable| where isHA==\"not_HA_Node\" |project  DB=strcat(DB,\"|\",Host),LastStatus ,StatusNumeric |union(connectivitytable | where isHA == \"PrimaryNode\" | join kind= leftouter (     connectivitytable     | where isHA == \"SecondaryNode\" ) on DB | extend LastStatus=iff( LastStatus contains \"Successful\" or LastStatus1 contains \"Successful\",\"Successful\" , strcat(LastStatus ,\" | \" ,LastStatus1 )) |project  DB=strcat(DB,\"|\",Host),LastStatus ,StatusNumeric)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Host",
                                            "Value": "Status Numeric"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "1",
                                                    "color": "#ff8c00",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "2",
                                                    "color": "#eb3c00",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Offline",
                                                    "threshold": "3",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=strcat(Database_s,\"|\",HOST_s),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\") ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s),MinSinceLastData=datetime_diff('Minute',now(),LastCall)",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" and Category== \"Connectivity\" and SubCategory_s ==\"Host\" |where TimeGenerated > ago(30d) | summarize LastCall=arg_max(TimeGenerated,*) by HOST_s,Database_s | project Host=strcat(Database_s,\"|\",HOST_s),IsCollectorOnline=iff(LastCall< ago(1h),\"Offline\",\"Online\") ,LastStatus=strcat(Connection_s,\":\",ErrorMessage_s),MinSinceLastData=datetime_diff('Minute',now(),LastCall)"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "DATABASES",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Service Status",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "let HanaConnectionTable= SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s,ConnectionStatus=Connection_s ; HanaConnectionTable |join kind= fullouter (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d     | where Service == \"indexserver\" ) on Host | project Host=strcat(Instance,\"; \",iff(isempty(Host),Host1 ,Host)) , Status=case(ConnectionStatus==\"Failed\", \"Unkown\", Status==\"YES\", \"Active\", Status) |summarize count() by Status  ",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#fcd116",
                                                "#dd5900",
                                                "#e81123"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "Active",
                                                    "color": "#55d455"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let HanaConnectionTable= SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s,ConnectionStatus=Connection_s ; HanaConnectionTable |join kind= fullouter (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d     | where Service == \"indexserver\" ) on Host | project Host=strcat(Instance,\"; \",iff(isempty(Host),Host1 ,Host)) , Status=case(ConnectionStatus==\"Failed\", \"Unkown\", Status==\"YES\", \"Active\", Status), Service=iff(isempty(Service),\"Unkown\",Service)",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Instance",
                                            "Value": ""
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s ,ConnectionStatus=Connection_s |union (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d )",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s == \"State\" | where Category == \"Connectivity\" |summarize arg_max(TimeGenerated,* ) by HOST_s |project Host=HOST_s ,ConnectionStatus=Connection_s |union (     SAPHana_CL     | where CollectorType_s ==\"Inventory\" and Category== \"Services\"     | summarize arg_max(TimeGenerated, *) by HOST_s,SERVICE_NAME_s     |project Instance=Instance_s,Host=HOST_s, Status=ACTIVE_STATUS_s , Service=SERVICE_NAME_s ,Port=SQL_PORT_d )"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Alerts",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Open Alerts",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s;  SAPHana_CL  | where CollectorType_s ==\"Inventory\"  | where Category == \"Alerts\"  |join kind= inner (     lastdatapoint  ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_HOST_s,ALERT_RATING_d |extend Priority=case(ALERT_RATING_d==1,\"Information\" ,ALERT_RATING_d==3,\"Medium\",ALERT_RATING_d==4,\"High\",ALERT_RATING_d==5,\"Error\",\"NotDefined\")  |summarize AlertCount=count() by Priority",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#eb3c00",
                                                "#ff8c00",
                                                "#fff100"
                                            ],
                                            "valueColorMapping": [
                                                {
                                                    "value": "High",
                                                    "color": "#e81123"
                                                },
                                                {
                                                    "value": "Medium",
                                                    "color": "#ff8c00"
                                                },
                                                {
                                                    "value": "Information",
                                                    "color": "#00bcf2"
                                                }
                                            ]
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let lastdatapoint = SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by ALERT_HOST_s ,Database_s;  SAPHana_CL  | where CollectorType_s ==\"Inventory\"  | where Category == \"Alerts\"  |join kind= inner (     lastdatapoint  ) on $left.ALERT_HOST_s==$right.ALERT_HOST_s and   $left.Database_s==$right.Database_s and $left.TimeGenerated==$right.TimeGenerated | project Alert=strcat(Database_s,\"|\",ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),ALERT_RATING_d | sort by ALERT_RATING_d desc nulls last ",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB-Alert",
                                            "Value": "Priority Numeric"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#00bcf2",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "2",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "3",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by HOST_s ,Database_s,ALERT_ID_d | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),Rating=ALERT_RATING_d | project DB, Alert, Rating",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s ==\"Inventory\" | where Category == \"Alerts\" |summarize arg_max(TimeGenerated, *) by HOST_s ,Database_s,ALERT_ID_d | project DB=Database_s,Alert=strcat(ALERT_NAME_s,\" ; \",ALERT_DETAILS_s),Rating=ALERT_RATING_d | project DB, Alert, Rating"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Tables / Partitions",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Largest Tables",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s ,PART_ID_d |summarize TotalCount=sum(RECORD_COUNT_d) by HOST_s,TableName_s  |top 10 by TotalCount desc nulls last |project TableName_s  , TotalCount",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s ,PART_ID_d |summarize TotalCount=sum(RECORD_COUNT_d) by Database_s,TableName_s  |top 10 by TotalCount desc nulls last |project Table=strcat(Database_s,\" | \",TableName_s)  , TotalCount",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Table",
                                            "Value": "Total Records"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Partititons",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Largest Partitions",
                                        "Subtitle": "Top 10"
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s |top 10 by RECORD_COUNT_d desc nulls last  |project TableName_s  , RECORD_COUNT_d",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s |top 10 by RECORD_COUNT_d desc  nulls last  |project TABLE_PART_LOADED=strcat(TableName_s ,\" | \",tostring(PART_ID_d),\" | \",LOADED_s) , RECORD_COUNT_d",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Table-Partition-isLoaded",
                                            "Value": "RecordCount"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": true,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "1500000000",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "1800000000",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s |top 10 by RECORD_COUNT_d //remove project line to get all columns and export  |project TableName_s  , RECORD_COUNT_d",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Tables\" and Subcategory_s==\"Largest\" |summarize arg_max(TimeGenerated, *) by HOST_s,TableName_s |top 10 by RECORD_COUNT_d //remove project line to get all columns and export  |project TableName_s  , RECORD_COUNT_d"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Active Sessions",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Connection Status",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\"  |summarize TotalConnections=sum(CUR_CONNS_d) by \t Database_s,CONNECTION_STATUS_s ,bin(TimeGenerated, 15m)",
                                        "Callout": {
                                            "Title": "Avg per hour",
                                            "Series": "",
                                            "Operation": "Average"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\" |where TimeGenerated > ago(15m) |summarize TotalConnections=sum(CUR_CONNS_d) by \t DB=Database_s,UserApp=strcat(APP_USER_s,\"\\\\\",APP_NAME_s),Status=CONNECTION_STATUS_s |sort by TotalConnections desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB",
                                            "Value": "TotalConnections Last 15min"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\" |summarize TotalConnections=sum(CUR_CONNS_d) by \t DB=Database_s,UserApp=strcat(APP_USER_s,\"\\\\\",APP_NAME_s),Status=CONNECTION_STATUS_s, bin(TimeGenerated, 15m)|where  {selected item} ",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\" |summarize TotalConnections=sum(CUR_CONNS_d) by \t DB=Database_s,UserApp=strcat(APP_USER_s,\"\\\\\",APP_NAME_s),Status=CONNECTION_STATUS_s, bin(TimeGenerated, 15m)|where  {selected item} "
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Lock Waits",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Top Waits",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": " SAPHana_CL | where CollectorType_s==\"Inventory\" | where Category ==\"Locks\"|summarize arg_max(TimeGenerated, *) by Database_s, TABLE_NAME_s, LOCK_TYPE_s , LOCK_MODE_s , WAIT_STATEMENT_HASH_g , BLK_STATEMENT_HASH_g , BLK_CLIENT_HOST_PID_s , BLK_APP_SOURCE_s  | project \tLockid=strcat(TABLE_NAME_s,\"|\", LOCK_TYPE_s ,\"|\", LOCK_MODE_s ), WAITS_d | summarize arg_max(WAITS_d, *)  by Lockid",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" | where Category ==\"Locks\"|summarize arg_max(TimeGenerated, *) by Database_s, TABLE_NAME_s, LOCK_TYPE_s , LOCK_MODE_s , WAIT_STATEMENT_HASH_g , BLK_STATEMENT_HASH_g , BLK_CLIENT_HOST_PID_s , BLK_APP_SOURCE_s  | top 10 by  WAITS_d desc nulls last   | project \t SYS_TIMESTAMP_s , Lock=strcat(TABLE_NAME_s,\"|\", LOCK_TYPE_s ,\"|\", LOCK_MODE_s ,\"|\", BLK_APP_SOURCE_s ), WAITS_d ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "TimeStamp",
                                            "Value": "WAIT SECONDS"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" | where Category ==\"Locks\" |summarize arg_max(TimeGenerated, *) by DB=Database_s, TABLE_NAME_s, LOCK_TYPE_s , LOCK_MODE_s , WAIT_STATEMENT_HASH_g , BLK_STATEMENT_HASH_g , BLK_CLIENT_HOST_PID_s , BLK_APP_SOURCE_s | project \t SYS_TIMESTAMP_s , DB, Lock=strcat(TABLE_NAME_s,\"|\", LOCK_TYPE_s ,\"|\", LOCK_MODE_s ,\"|\", BLK_APP_SOURCE_s ), WAITS_d |sort by  WAITS_d desc nulls last ",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL | where CollectorType_s==\"Inventory\" | where Category ==\"Locks\" |summarize arg_max(TimeGenerated, *) by DB=Database_s, TABLE_NAME_s, LOCK_TYPE_s , LOCK_MODE_s , WAIT_STATEMENT_HASH_g , BLK_STATEMENT_HASH_g , BLK_CLIENT_HOST_PID_s , BLK_APP_SOURCE_s | project \t SYS_TIMESTAMP_s , DB, Lock=strcat(TABLE_NAME_s,\"|\", LOCK_TYPE_s ,\"|\", LOCK_MODE_s ,\"|\", BLK_APP_SOURCE_s ), WAITS_d |sort by  WAITS_d desc nulls last "
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Database Activity",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "Execution Statistics",
                                                "Subtitle": "SELECT/INSERT/UPDATE/DELETE"
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where PerfObject_s==\"ConnectionStatistics\" and PerfInstance_s==\"EXECUTIONS\" |extend Counter=strcat(PerfCounter_s,\":\",HOST_s) |summarize AggregatedValue=avg(PerfValue_d) by Counter,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Connections ",
                                                "Subtitle": "Running vs Idle"
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\" |summarize TotalConnections=sum(CUR_CONNS_d) by \tbin(TimeGenerated,15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Sessions by AppUser",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL | where CollectorType_s==\"Inventory\" and Category==\"Connections\" | extend APP_USER=strcat(Database_s,'| ',APP_USER_s) |summarize AggregatedValue=sum(CUR_CONNS_d) by APP_USER,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Service Performance - I",
                                        "newGroup": true
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "Requests Per Second",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"REQUESTS_PER_SEC\" |summarize avg(PerfValue_d) by strcat(PerfCounter_s,\":\",HOST_s),PerfInstance_s,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Transaction Count",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"TRANSACTION_COUNT\" |summarize avg(PerfValue_d) by strcat(PerfCounter_s,\":\",HOST_s),PerfInstance_s,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Handle Count",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"HANDLE_COUNT\" |join kind= inner ( SAPHana_CL |where CollectorType_s ==\"Inventory\" and Category ==\"Services\" |summarize arg_max(TimeGenerated, *)by HOST_s,PORT_d |project HOST_s ,Port=PORT_d,Service=SERVICE_NAME_s ) on $left.PerfInstance_d==$right.Port and $left.HOST_s==$right.HOST_s |summarize avg(PerfValue_d) by PerfCounter_s,Service,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Service Performance - II",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "Connection Count",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"CONNECTION_COUNT\" |join kind= inner ( SAPHana_CL |where CollectorType_s ==\"Inventory\" and Category ==\"Services\" |summarize arg_max(TimeGenerated, *)by HOST_s,PORT_d |project HOST_s ,Port=PORT_d,Service=SERVICE_NAME_s ) on $left.PerfInstance_d==$right.Port and $left.HOST_s==$right.HOST_s |summarize AVG=avg(PerfValue_d) by strcat(PerfCounter_s,\":\",HOST_s),Service,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Response Time",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"RESPONSE_TIME\" |summarize Avg=avg(PerfValue_d) by strcat(PerfCounter_s,\":\",HOST_s),PerfInstance_s,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Statement Count",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "SAPHana_CL |where CollectorType_s ==\"Performance\" and PerfObject_s ==\"Service\" |where PerfInstance_s != \"daemon\" | where PerfCounter_s == \"STATEMENT_COUNT\" |join kind= inner ( SAPHana_CL |where CollectorType_s ==\"Inventory\" and Category ==\"Services\" |summarize arg_max(TimeGenerated, *)by HOST_s,PORT_d |project HOST_s ,Port=PORT_d,Service=SERVICE_NAME_s ) on $left.PerfInstance_d==$right.Port and $left.HOST_s==$right.HOST_s |summarize AVG=avg(PerfValue_d) by strcat(PerfCounter_s,\":\",HOST_s),Service,bin(TimeGenerated, 15m)",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                },
                                                "NavigationSelect": {}
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Backup Size Estimations",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Backup\" | summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s,ENTRY_TYPE_NAME_s |project DB=strcat(Instance_s,\" : \",Database_s,\" : \",SERVICE_NAME_s),SizeinGB= round(ESTIMATED_SIZE_d/1024,2)",
                                        "CenterLegend": {
                                            "Text": "Total_GB",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "SAPHana_CL | where CollectorType_s ==\"Inventory\" and Category== \"Backup\" | summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s,ENTRY_TYPE_NAME_s |project DB=strcat(Instance_s,\" : \",Database_s,\" : \",SERVICE_NAME_s),BackupType=ENTRY_TYPE_NAME_s,SizeinGB= round(ESTIMATED_SIZE_d/1024,2)",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "DB",
                                            "Value": "SizeinGB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item} | sort by TimeGenerated desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "search {selected item} | sort by TimeGenerated desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "SMART ANALYTICS",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Trending Queires",
                                        "Subtitle": "Top 10"
                                    },
                                    "LineChart": {
                                        "Query": " SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"     |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\"    | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(1d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration)  |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last  | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) |summarize AggregatedValue=avg(avgInterpolated)  by path ,bin(TimeGenerated,1h)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\"   | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(1d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last  | mvexpand  avgInterpolated to typeof(double) |project-away avg_duration,outliers,series_fit_line_avgInterpolated_rsquare,series_fit_line_avgInterpolated_slope,\t series_fit_line_avgInterpolated_variance,series_fit_line_avgInterpolated_rvariance,series_fit_line_avgInterpolated_interception,series_fit_line_avgInterpolated_line_fit |summarize AggregatedValue=avg(avgInterpolated)  by path  |join kind= inner (      SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   |summarize arg_max(TimeGenerated, *) by path  |project path,STATEMENT_STRING_s ) on path |project path,Statement=STATEMENT_STRING_s,AggregatedValue |sort by AggregatedValue desc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "QueryHash",
                                            "Value": "AvgDuration ms"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": " SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\"   | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(1d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last  | mvexpand  avgInterpolated to typeof(double) |project-away avg_duration,outliers,series_fit_line_avgInterpolated_rsquare,series_fit_line_avgInterpolated_slope,\t series_fit_line_avgInterpolated_variance,series_fit_line_avgInterpolated_rvariance,series_fit_line_avgInterpolated_interception,series_fit_line_avgInterpolated_line_fit |summarize AggregatedValue=avg(avgInterpolated)  by path  |join kind= inner (      SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   |summarize arg_max(TimeGenerated, *) by path  |project path,STATEMENT_STRING_s ) on path |project path,Statement=STATEMENT_STRING_s,AggregatedValue |sort by AggregatedValue desc ",
                                        "NavigationSelect": {
                                            "NavigationQuery": " SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\"   | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(1d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last  | mvexpand  avgInterpolated to typeof(double) |project-away avg_duration,outliers,series_fit_line_avgInterpolated_rsquare,series_fit_line_avgInterpolated_slope,\t series_fit_line_avgInterpolated_variance,series_fit_line_avgInterpolated_rvariance,series_fit_line_avgInterpolated_interception,series_fit_line_avgInterpolated_line_fit |summarize AggregatedValue=avg(avgInterpolated)  by path  |join kind= inner (      SAPHana_CL   |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"  | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)   |summarize arg_max(TimeGenerated, *) by path  |project path,STATEMENT_STRING_s ) on path |project path,Statement=STATEMENT_STRING_s,AggregatedValue |sort by AggregatedValue desc "
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Top 10 Queries",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Top 10 Queries by  Execution Count",
                                        "Subtitle": ""
                                    },
                                    "LineChart": {
                                        "Query": "let top10=SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |summarize executioncount=max(EXECUTION_COUNT_d) by path |top 10 by executioncount desc nulls last |project path; SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |where path in (top10) |summarize AggregatedValue=max(EXECUTION_COUNT_d) by path ,bin(TimeGenerated ,15m)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |summarize executioncount=max(EXECUTION_COUNT_d) by path |top 10 by executioncount desc nulls last |project path,executioncount",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Statement Hash",
                                            "Value": "Execution Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |summarize duration_ms=round(max(AVG_EXECUTION_TIME_d/1000),0) by path |join kind= inner (     SAPHana_CL     |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"     | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)     |summarize arg_max(TimeGenerated, *) by path     |project path,STATEMENT_STRING_s ) on path |project path,Statement=STATEMENT_STRING_s,duration_ms |sort by duration_ms  desc",
                                        "NavigationSelect": {
                                            "NavigationQuery": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |summarize duration_ms=round(max(AVG_EXECUTION_TIME_d/1000),0) by path |join kind= inner (     SAPHana_CL     |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\"     | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)     |summarize arg_max(TimeGenerated, *) by path     |project path,STATEMENT_STRING_s ) on path |project path,Statement=STATEMENT_STRING_s,duration_ms |sort by duration_ms  desc"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "NotableQueriesBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "List of queries",
                                        "newGroup": false,
                                        "preselectedFilters": "Type, Computer",
                                        "renderMode": "grid"
                                    },
                                    "queries": [
                                        {
                                            "query": "let query=\"e7492f87-6680-7a18-9614-b8467932922c|S4X-30|azesapsbxs4db1|S4X\";  SAPHana_CL  |where    CollectorType_s==\"Inventory\" and    Category==\"Statement\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s)  |where path==query |summarize arg_max(TimeGenerated, *) by path |project path,STATEMENT_STRING_s  //edit query to analyze",
                                            "displayName": "Get Query Details"
                                        },
                                        {
                                            "query": "let query=\"e7492f87-6680-7a18-9614-b8467932922c|S4X-30|azesapsbxs4db1|S4X\";  let trendthreshold=0.1;  let daystocheck=ago(2d);  let bininterval=15m; SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |where path==query |summarize avg(AVG_EXECUTION_TIME_d/1000) by path,bin(TimeGenerated, bininterval) |render timechart ",
                                            "displayName": "Query Execution Time History"
                                        },
                                        {
                                            "query": "let trendthreshold=0.2; let daystocheck=ago(2d); SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(daystocheck,now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |where trend >= trendthreshold |top 10 by trend desc nulls last | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 |render timechart",
                                            "displayName": "Get Top 10 Trending Queries"
                                        },
                                        {
                                            "query": "let trend7days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(7d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256; let trend30days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= ago(30d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(30d),now(), 2h) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand  TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  360; trend7days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend7Day|\",HOST_s) , bin(TimeGenerated, 1h) |union (trend30days |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend30Day|\",HOST_s) , bin(TimeGenerated, 1h)), (  trend7days |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"ActualCPU|\",HOST_s) , bin(TimeGenerated, 1h)  ) |summarize AvgCPU=avg(AvgValue) by Host, bin(TimeGenerated, 1h) |render timechart ",
                                            "displayName": "CPU Actual vs Trends 7Days / 30Days"
                                        },
                                        {
                                            "query": "let trending=SAPHana_CL | where CollectorType_s == \"Performance\" | where  PerfCounter_s in(\"UsedMemoryGB\") |extend Path=strcat(HOST_s,':',PerfCounter_s) |where TimeGenerated >= ago(7d) | make-series avgValue=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by Path | extend avgInterpolated = series_fill_linear(avgValue) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope | mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 ; trending |summarize AvgValue=avg(series_fit_line_avgInterpolated_line_fit) by Host=strcat(\"Trend|\",Path) , bin(TimeGenerated, 1h) |union (  trending |summarize AvgValue=avg(avgInterpolated) by Host=strcat(\"Actual|\",Path) , bin(TimeGenerated, 1h)  ) |summarize UsedMemGB=avg(AvgValue) by Host, bin(TimeGenerated, 1h) |render timechart ",
                                            "displayName": "Used Memory Actual vs Trend 7 Days"
                                        },
                                        {
                                            "query": "let searchlastndays=ago(7d); let forecastndays=30; let bin_size=1d; let pasttrend=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfObject_s ==\"Host\" and PerfCounter_s ==\"CPU_PCT\" |where TimeGenerated >= searchlastndays | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(searchlastndays,now(), 1d) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) | extend rp=series_fit_line_avgInterpolated_line_fit[(arraylength(avgInterpolated)-1)] | extend days_to_zero = rp/-series_fit_line_avgInterpolated_slope/(1d/1d) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256; pasttrend |project Host=HOST_s,avgCPU=avgInterpolated,TimeGenerated |union ( range i from 0 to forecastndays  step 1 | project TimeGenerated =datetime_add('day',i,now()), y=toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s  |project series_fit_line_avgInterpolated_slope)*i ,  cpu=toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s|project avgInterpolated) ,Host=strcat(toscalar(pasttrend|summarize arg_max(TimeGenerated,*) by HOST_s|project HOST_s),'-Forecast') |extend avgCPU=cpu+y |project TimeGenerated,avgCPU,Host) |render timechart ",
                                            "displayName": "CPU Forecast for n days based on past n days"
                                        },
                                        {
                                            "query": "let prev7days=SAPHana_CL | where CollectorType_s has \"Performance\" | where PerfCounter_s ==\"UsedMemoryGB\" |where TimeGenerated >= ago(7d) | make-series avgCPU=avg(PerfValue_d) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1d) by HOST_s | extend avgInterpolated = series_fill_linear(avgCPU) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) | extend rp=series_fit_line_avgInterpolated_line_fit[(arraylength(avgInterpolated)-1)] | extend days_to_zero = rp/-series_fit_line_avgInterpolated_slope/(1d/1d) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |mvexpand outliers to typeof(double), avgInterpolated to typeof(double), TimeGenerated to typeof(datetime),series_fit_line_avgInterpolated_line_fit  to typeof(double) limit  256 |summarize arg_max(TimeGenerated,*) by HOST_s; let bin_size=1d; range i from 0 to 30d/bin_size step 5 |extend Day=strcat('day',tostring(toint(i))) | project t=i*1d, y=toscalar(prev7days |project series_fit_line_avgInterpolated_slope)*i , cpu=toscalar(prev7days |project avgInterpolated),Day |extend forecastMeM=cpu+y |project t,Day,forecastMeM =iff(forecastMeM<0,toreal(0),forecastMeM) |render barchart ",
                                            "displayName": "Memory Forecast based on last 7days"
                                        },
                                        {
                                            "query": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) | make-series avg_duration=max(AVG_EXECUTION_TIME_d/1000) default=double(null)  on TimeGenerated in range(ago(7d),now(), 1h) by path | extend avgInterpolated = series_fill_linear(avg_duration) |extend outliers=series_outliers(avgInterpolated) | extend series_fit_line(avgInterpolated) |extend trend=series_fit_line_avgInterpolated_rsquare*series_fit_line_avgInterpolated_slope |top 10 by trend desc nulls last |project path |join kind= inner (     SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" |where TimeGenerated > ago(7d) | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |project path,ACCESSED_TABLE_NAMES_s ) on path |extend Tables=split(ACCESSED_TABLE_NAMES_s,',') |mvexpand Tables to typeof(string) |summarize count() by Tables",
                                            "displayName": "Tables Accessed by Trending Queries"
                                        },
                                        {
                                            "query": "let tabletosearch=\"LIVECACHE\";  SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Statement\" |where STATEMENT_STRING_s  !startswith \"\" \"/* OMS */\" | extend path=strcat(STATEMENT_HASH_g,\"|\",Instance_s, \"|\", HOST_s, \"|\", Database_s) |extend Tables=split(ACCESSED_TABLE_NAMES_s,',') |mvexpand Tables to typeof(string) |where Tables contains tabletosearch |project path, ACCESSED_TABLE_NAMES_s  |distinct path",
                                            "displayName": "Find queries accessing specific table"
                                        }
                                    ]
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "SingleQueryDonutBuilderTileV1",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Donut": {
                                    "Query": "SAPHana_CL |where  \tCollectorType_s==\"Inventory\" and \tCategory==\"Backup\" |summarize arg_max(TimeGenerated, *) by Database_s,SERVICE_NAME_s, Instance_s , ENTRY_TYPE_NAME_s | where SERVICE_NAME_s == \"indexserver\"  | where ENTRY_TYPE_NAME_s == \"complete data backup\"  |project DB=Database_s,\tSizeGB=round(ESTIMATED_SIZE_d/1024,0)",
                                    "CenterLegend": {
                                        "Text": "Total",
                                        "Operation": "Sum",
                                        "ArcsToSelect": []
                                    },
                                    "Options": {
                                        "colors": [
                                            "#7fba00",
                                            "#6dc2e9",
                                            "#fcd116"
                                        ],
                                        "valueColorMapping": []
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | limit 1 | project TimeGenerated",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
                ,
                {
                    "name": "[variables('omsSolutions').customSolution.solutionName]",
                    "type": "Microsoft.OperationsManagement/solutions",
                    "apiVersion": "2015-11-01-preview",
                    "location": "[parameters('logAnalyticsRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'), '/views/', variables('omsSolutions').customSolution.name)]",
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'), '/views/Azure  HANA Configuration Checks')]",  
                        "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Databases')]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Landscape')]",                   
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestSchedulerRunbook.name)]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestMainRunbook.name)]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestConfigRunbook.name)]"
                    ],
                    "plan": {
                        "name": "[variables('omsSolutions').customSolution.solutionName]",
                        "product": "[variables('omsSolutions').customSolution.name]",
                        "publisher": "[variables('omsSolutions').customSolution.publisher]",
                        "promotionCode": ""
                    },
                    "properties": {
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
                        "referencedResources": [],
                        "containedResources": [
                            "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), variables('omsSolutions').customSolution.name)]",
                            "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure  HANA Configuration Checks')]",
                            "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Databases')]",
                            "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('logAnalyticsWorkspaceName'), 'Azure HANA Landscape')]",
                            "[resourceId('Microsoft.Automation/automationAccounts/runbooks/', parameters('automationAccountName'), variables('runbooks').ingestSchedulerRunbook.name)]",
                            "[resourceId('Microsoft.Automation/automationAccounts/runbooks/', parameters('automationAccountName'), variables('runbooks').ingestMainRunbook.name)]",
                            "[resourceId('Microsoft.Automation/automationAccounts/runbooks/', parameters('automationAccountName'), variables('runbooks').ingestConfigRunbook.name)]",                            
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('opsInsightWorkspaceID'))]",
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('opsInsightWorkspaceKey'))]",
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('createScheduleAutomationAccountName'))]",
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('createScheduleResourceGroupName'))]",
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('hanaMonitorDefaultUser'))]",
                            "[resourceId('Microsoft.Automation/automationAccounts/variables/', parameters('automationAccountName'), variables('hanaMonitorDefaultPassword'))]"
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[Concat(variables('solutionName'), '(', parameters('logAnalyticsWorkspaceName'), ')')]",
            "location": "[parameters('logAnalyticsRegion')]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
            ] ,
            "plan": {
                "name": "[Concat(variables('solutionName'), '(', parameters('logAnalyticsWorkspaceName'), ')')]",
                "product": "[Concat('OMSGallery/', variables('solutionName'))]",
                "promotionCode": "",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
            } 
        },
      {
             "name": "[concat(parameters('logAnalyticsWorkspaceName'), '|', tolower(variables('alertArray')[copyIndex()].searchCategory), '|', toLower(variables('alertArray')[copyIndex()].searchName), '|','schedule-',uniqueString(resourceGroup().id, deployment().name,parameters('logAnalyticsWorkspaceName'), '|', variables('alertArray')[copyIndex()].searchCategory, '|', variables('alertArray')[copyIndex()].searchName), '/', 'alert-',uniqueString(resourceGroup().id, deployment().name,parameters('logAnalyticsWorkspaceName')]",           
            "type": "microsoft.insights/scheduledqueryrules",
            "location": "[parameters('logAnalyticsRegion')]",
            "tags": {},
            "etag": "*",
            "copy": {
                "name": "actioncopy",
                "count": "[length(variables('alertArray'))]"
            },
            "properties": {
                "description": "[variables('alertArray')[copyIndex()].description]",
                "displayName": "[variables('alertArray')[copyIndex()].alertName]",
                "enabled": "false",        
        "source": {
                    "query": "[variables('alertArray')[copyIndex()].query]",
                    "dataSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": "[variables('alertArray')[copyIndex()].scheduleIntervalInMinutes]",
                    "timeWindowInMinutes": "[variables('alertArray')[copyIndex()].scheduleQueryTimeSpan]"
                },
                "action": {
                    "severity": "[variables('alertArray')[copyIndex()].severity]" ,
                    "aznsAction": {
                        "actionGroup": [
                            null
                        ],
                        "emailSubject": null,
                        "customWebhookPayload": null
                    },
                    "throttlingInMin": "[variables('alertArray')[copyIndex()].alertThrottleInMinutes]",
                    "trigger": {
                        "thresholdOperator": "[variables('alertArray')[copyIndex()].operator]",
                        "threshold": "[variables('alertArray')[copyIndex()].alertTresholdValue]" 
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },        
        {
            "apiversion": "2015-10-31",
            "location": "[parameters('automationRegion')]",
            "name": "[parameters('automationAccountName')]",
            "type": "Microsoft.Automation/automationAccounts",
            "properties": {     
                "sku": {
                    "name": "[variables('omsAutomationSku')]"                }

            },
            "resources": [
                {
                    "name": "[variables('opsInsightWorkspaceID')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('opsInsightWorkspaceIDDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('opsInsightWorkspaceIDType')]",
                        "value": "[concat('\"',reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2015-11-01-preview').customerId,'\"')]"
                    }
                },
                {
                    "name": "[variables('opsInsightWorkspaceKey') ]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('opsInsightWorkspaceKeyDescription')]",
                        "isEncrypted": 1,
                        "type": "[variables('opsInsightWorkspaceKeyType')]",
                        "value": "[concat('\"',listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2015-11-01-preview').primarySharedKey,'\"')]"
                    }
                },
                {
                    "name": "[variables('createScheduleAutomationAccountName')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('createScheduleAutomationAccountDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('createScheduleAutomationAccountType')]",
                        "value": "[concat('\"', parameters('automationAccountName'),'\"')]"
                    }
                },
                {
                    "name": "[variables('createScheduleResourceGroupName')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('createScheduleResourceGroupDescription')]",
                        "isEncrypted": 0,
                        "type": "[variables('createScheduleResourceGroupType')]",
                        "value": "[concat('\"', resourceGroup().name, '\"')]"
                    }
                },
                {
                    "name": "[variables('opsInsightJobTracker')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "[variables('opsInsightJobTracker')]",
                        "isEncrypted": 0,
                        "type": "[variables('opsInsightJobTrackerType')]",
                        "value": 0
                    }
                },
                {
                    "name": "[variables('runbooks').ingestMainRunbook.name]",
                    "type": "runbooks",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceID'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceKey'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "[variables('runbooks').ingestMainRunbook.type]",
                        "logProgress": "false",
                        "logVerbose": "false",
                        "description": "[variables('runbooks').ingestMainRunbook.description]",
                        "publishContentLink": {
                            "uri": "[variables('mainRunbookUri')]",
                            "version": "[variables('runbooks').ingestMainRunbook.version]"
                        }
                    }
                }, {
                    "name": "[variables('runbooks').ingestConfigRunbook.name]",
                    "type": "runbooks",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceID'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceKey'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "[variables('runbooks').ingestConfigRunbook.type]",
                        "logProgress": "false",
                        "logVerbose": "false",
                        "description": "[variables('runbooks').ingestConfigRunbook.description]",
                        "publishContentLink": {
                            "uri": "[variables('configRunbookUri')]",
                            "version": "[variables('runbooks').ingestConfigRunbook.version]"
                        }
                    }
                },
                {
                    "name": "[variables('runbooks').ingestSchedulerRunbook.name]",
                    "type": "runbooks",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceID'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/variables/', variables('opsInsightWorkspaceKey'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "[variables('runbooks').ingestSchedulerRunbook.type]",
                        "logProgress": "false",
                        "logVerbose": "false",
                        "description": "[variables('runbooks').ingestSchedulerRunbook.description]",
                        "publishContentLink": {
                            "uri": "[variables('schedulerRunbookUri')]",
                            "version": "[variables('runbooks').ingestSchedulerRunbook.version]"
                        }
                    }
                },
                {
                    "name": "[concat(parameters('automationAccountName'), '/', variables('ingestscheduleName'),'-',variables('ingestSchedulerGuid'))]",
                    "type": "microsoft.automation/automationAccounts/schedules",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestSchedulerRunbook.name)]"
                    ],
                    "tags": {},
                    "properties": {
                        "description": "OMS Ingestion API Scheduler",
                        "startTime": "",
                        "isEnabled": "true",
                        "interval": "[variables('ingestInterval')]",
                        "frequency": "[variables('ingestFrequency')]"
                    }
                },
                {
                    "name": "[concat(parameters('automationAccountName'), '/', variables('ingestSchedulerGuid'))]",
                    "type": "microsoft.automation/automationAccounts/jobSchedules",
                    "apiVersion": "2015-10-31",
                    "location": "[parameters('automationRegion')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/schedules/', variables('ingestscheduleName'),'-',variables('ingestSchedulerGuid'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'), '/runbooks/', variables('runbooks').ingestSchedulerRunbook.name)]",
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "schedule": {
                            "name": "[concat(variables('ingestscheduleName'),'-',variables('ingestSchedulerGuid'))]"
                        },
                        "runbook": {
                            "name": "[variables('Runbooks').ingestSchedulerRunbook.name]"
                        },
                         "parameters": {
                            "collectQueryPerformance": "[parameters('collectQueryPerformance')]",
                            "collectHanaTableInventory": "[parameters('collectHanaTableInventory')]",
                            "configFolder": "[variables('sapHanaConfigfolder')]",
                            "hybridWorkerGroup" : "[variables('hybridWorkerGroup')]",
                            "frequency": "[variables('dataCollectionFrequency')]"
                        }
                    }
                },
                {
                    "name": "[variables('hanaMonitorDefaultUser')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "scale": null,
                    "properties": {
                        "description": "Hana Monitoring User for default profile",
                        "isEncrypted": false,
                        "value": "[concat('\"', parameters('sapHanaMonitorUser'), '\"')]"
                                },
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ]
                },
                {
                    "name": "[variables('hanaMonitorDefaultPassword')]",
                    "type": "variables",
                    "apiVersion": "2015-10-31",
                    "scale": null,
                    "properties": {
                        "description": "Hana Monitoring User for default profile",
                        "isEncrypted": true,
                        "value":  "[concat('\"', parameters('sapHanaMonitorPassword'), '\"')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Insights/actionGroups",
            "apiVersion": "2018-03-01",
            "name": "[variables('actionGroupName')]",
            "location": "Global",
            "properties": {
              "groupShortName": "[variables('actionGroupShortName')]",
              "enabled": true,
              "smsReceivers": [
              ],
              "emailReceivers": [
                {
                    "name": "SapHanaEmail",
                    "emailAddress": "[parameters('notifyEmail')]"
                  }
              ],
              "webhookReceivers": [
             ]
            }
          }
    ],
    "outputs": {}
}